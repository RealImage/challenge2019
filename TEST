IDENTIFICATION DIVISION.
PROGRAM-ID. TEST.
ENVIRONMENT DIVISION.
DATA DIVISION.
FILE SECTION.
FD INPUT1.
   RECORD CONTAINS 80 CHARACTERS
   BLOCK CONTAINS 800 CHARACTERS
   DATA RECORD IS INP-FILE1
   RECORDING MODE IS F.
FD INPUT2.
   RECORD CONTAINS 80 CHARACTERS
   BLOCK CONTAINS 800 CHARACTERS
   DATA RECORD IS INP-FILE2
   RECORDING MODE IS F.
FD OUTPUT1.
   RECORD CONTAINS 80 CHARACTERS
   BLOCK CONTAINS 800 CHARACTERS
   DATA RECORD IS OUT-FILE1
   RECORDING MODE IS F.
FD OUTPUT2.
   RECORD CONTAINS 80 CHARACTERS
   BLOCK CONTAINS 800 CHARACTERS
   DATA RECORD IS OUT-FILE2
   RECORDING MODE IS F.

01 INP-FILE1.
   05 I1-DELIVERY-ID   PIC X(05).
   05 FILLER           PIC X(01) VALUE ','.
   05 I1-COST          PIC 9(03).
   05 FILLER           PIC X(01) VALUE ','.
   05 I1-THEATRE-ID    PIC X(02).

01 OUT-FILE1.
   05 O1-DELIVERY-ID   PIC X(05).
   05 FILLER           PIC X(01) VALUE ','.
   05 O1-INDICATION    PIC X(05).
   05 FILLER           PIC X(01) VALUE ','.
   05 O1-PARTNER-ID    PIC X(02).
   05 FILLER           PIC X(01) VALUE ','.
   05 O1-DELIVERY-COST PIC 9(9).

01 OUT-FILE2.
   05 O2-DELIVERY-ID   PIC X(05).
   05 FILLER           PIC X(01) VALUE ','.
   05 O2-INDICATION    PIC X(05).
   05 FILLER           PIC X(01) VALUE ','.
   05 O2-PARTNER-ID    PIC X(02).
   05 FILLER           PIC X(01) VALUE ','.
   05 O2-DELIVERY-COST PIC 9(9).


WORKING-STORAGE SECTION.
EXEC SQL
   INCLUDE SQLCA
END-EXEC

//*Including partners.csv table
EXEC SQL
   INCLUDE PARTNERS
END-EXEC

//*Including capacities.csv table
EXEC SQL
   INCLUDE CAPACITIES
END-EXEC

01 WS-PARTNER-ID1 PIC X(100).
01 WS-PARTNER-ID2 PIC X(100).
01 WS-COST1       PIC 9(9).
01 WS-COST2       PIC 9(9).
01 WS-COST3       PIC 9(9) VALUE 0.
01 WS-END-OF-FILE1 PIC X(01) VALUE 'N'. 
01 WS-END-OF-FILE2 PIC X(01) VALUE 'N'. 
01 INDICATION1 PIC X(05).
01 INDICATION2 PIC X(05).
   
PROCEDURE DIVISION.
0001-MAIN.
     PERFORM 0002-DELIVERY-COST THRU 0002-EXIT
     
     PERFORM 0004-CAPACITY THRU 0004-EXIT
STOP RUN.

0002-DELIVERY-COST.

READ INPUT1
AT END 
    MOVE 'Y' TO WS-END-OF-FILE1
NOT AT END
     EXEC SQL
	SELECT COST-PER-GB,
	       MINIMUM-COST,
	       PARTNER-ID
	  FROM PARTNERS
	 WHERE THEATRE =I1-THEATREID
     END-EXEC
EVALUATE SQLCODE
  WHEN 0

     COMPUTE WS-COST1 =PARTNERS.COST_PER_GB * I1-COST

     IF WS-COST >= PARTNERS.MINIMUM_COST
        MOVE 'TRUE' TO INDICATION1
        MOVE PARTNERS.PARTNER_ID TO WS-PARTNER-ID1
        
     ELSE
        MOVE 'FALSE' TO INDICATION1
        MOVE SPACES TO WS-PARTNER-ID1
        MOVE SPACES TO WS-COST1

     END-IF

     PERFORM 0003-WRITE-OUTPUT1 THRU 0003-EXIT

  WHEN OTHER
     DISPLAY 'PROGRAM TERMINATED'
END-EVALUATE.



0002-EXIT.
     EXIT.

0003-WRITE-OUTPUT1.
     MOVE I1-DELIVERY-ID   TO O1-DELIVERY-ID
     MOVE INDICATION1      TO O1-INDICATION
     MOVE WS-PARTNER-ID1   TO O1-PARTNER-ID
     MOVE WS-COST1         TO O1-DELIVERY-COST

     WRITE OUT-FILE1.

0003-EXIT.
     EXIT.

0004-CAPACITY.
 READ INPUT2
AT END 
    MOVE 'Y' TO WS-END-OF-FILE2
NOT AT END
 COMPUTE WS-COST2 =PARTNERS.COST_PER_GB * I2-COST
 COMPUTE WS-COST3 =WS-COST3 + WS-COST2

     EXEC SQL
	SELECT COST-PER-GB,
	       MINIMUM-COST,
	       PARTNER-ID,
   	       CAPACITIES
	  FROM PARTNERS PARTNERS,CAPACITIES CAPACITIES
	 WHERE THEATRE =I2-THEATREID
     END-EXEC
EVALUATE SQLCODE
  WHEN 0
  IF WS-COST3 >= CAPACITIES
        MOVE 'TRUE' TO INDICATION2
        MOVE PARTNERS.PARTNER_ID TO WS-PARTNER-ID2
        
  ELSE
        MOVE 'FALSE' TO INDICATION2
        MOVE SPACES TO WS-PARTNER-ID2
        MOVE SPACES TO WS-COST2

  END-IF

  PERFORM 0005-WRITE-OUTPUT2 THRU 0005-EXIT


  WHEN OTHER
     DISPLAY 'PROGRAM TERMINATED'
END-EVALUATE.




0004-EXIT.
     EXIT.

0005-WRITE-OUTPUT2.
     MOVE I2-DELIVERY-ID   TO O2-DELIVERY-ID
     MOVE INDICATION2      TO O2-INDICATION
     MOVE WS-PARTNER-ID2   TO O2-PARTNER-ID
     MOVE WS-COST2         TO O2-DELIVERY-COST

     WRITE OUT-FILE2.

0005-EXIT.
     EXIT.
